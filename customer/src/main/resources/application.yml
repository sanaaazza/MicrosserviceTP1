
spring:
  application:
    name: customer  # Nom de l'application qui correspond à customer-dev.yml dans GitHub
  profiles:
    active: dev  # Profil actif qui est 'dev'
  config:
    import: "configserver:"  # Cette ligne est utilisée pour indiquer que les configurations doivent être importées depuis un Config Server
  cloud:
    config:
      uri: http://localhost:8888  # URL de votre Config Server, où il va chercher les configurations
      fail-fast: true  # Si true, l'application échouera immédiatement si elle ne peut pas obtenir les configurations du serveur





#spring:
#  application:
#    name: customer
#  datasource:
#    username: root
#    url: jdbc:mysql://localhost:3306/microservicesTp1Customer?createDatabaseIfNotExist=true
#    password: 147896325
#  jpa:
#    hibernate:
#      ddl-auto: create-drop
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQLDialect
#        format_sql: true
#    show-sql: true
#  boot:
#    admin:
#      client:
#        url : http://localhost:8088
#  cloud:
#    config:
#      uri: http://localhost:8888
#      enabled: true
#      profile:
#  config:
#    import: optional:configserver:http://localhost:8888
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
#  instance:
#    preferIpAddress: true
#
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"

